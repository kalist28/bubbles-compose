name: Build, Publish, and Release

on:
  push:
    branches:
      - main        # stable
      - develop     # beta
      - 'release/**' # rc
  workflow_dispatch:

permissions:
  contents: write   # –Ω—É–∂–Ω–æ –¥–ª—è –ø—É—à–∞ —Ç–µ–≥–æ–≤

jobs:
  infer-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.nyx.outputs.version }}

    steps:
      - name: "‚úÖ Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: "üßæ Set git user"
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: "üöÄ Nyx release (tag + changelog)"
        id: nyx
        uses: mooltiverse/nyx@main
        env:
          NYX_VERBOSITY: 'WARN'
        with:
          configurationFile: 'build-configuration/.nyx.json'
          command: 'publish'
          changelogPath: CHANGELOG.md

      - name: "üü¢ Release version is ${{ steps.nyx.outputs.version }}"
        if: ${{ steps.nyx.outputs.version != '' }}
        run: echo The release version is ${{ steps.nyx.outputs.version }}

      - name: "üìñ Read Changelog for Release Notes"
        if: ${{ steps.nyx.outputs.version != '' }}
        id: changelog
        run: |
          awk '/^## / {found++} found == 1 {print}' CHANGELOG.md > latest-changelog.md

      - name: "üåä Create GitHub Release"
        if: ${{ steps.nyx.outputs.version != '' }}
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ steps.nyx.outputs.version }}
          name: Release ${{ steps.nyx.outputs.version }}
          bodyFile: latest-changelog.md
          prerelease: ${{ contains(steps.nyx.outputs.version, '-beta') || contains(steps.nyx.outputs.version, '-rc') }}

  build-and-publish:
    if: ${{ needs.infer-release.outputs.version != '' }}
    runs-on: macos-latest
    needs: infer-release
    environment: Maven

    steps:
      - name: "‚úÖ Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0              # —á—Ç–æ–±—ã –±—ã–ª –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–µ–≥, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≤ —Å–±–æ—Ä–∫–µ

      - name: "‚öôÔ∏è Set up JDK 21"
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: "‚öôÔ∏è Setup Gradle"
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.13

      - name: "üåé Publish with Gradle"
        run: ./gradlew publish --no-configuration-cache -Pversion=$VERSION --build-cache --daemon --parallel --scan
        env:
          VERSION: ${{ needs.infer-release.outputs.version }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}